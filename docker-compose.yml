services:
  postgres:
    image: postgres:16
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "keycloak"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - keycloak-net

  keycloak:
    build: ./keycloak
    container_name: keycloak
    restart: unless-stopped
    command:
      - start
      - --optimized
      - --https-certificate-file=/opt/keycloak/conf/certs/certfile.pem
      - --https-certificate-key-file=/opt/keycloak/conf/certs/keyfile.pem
    environment:
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: admin
      KC_PROXY: edge
      KC_HOSTNAME_STRICT: false
      KC_HTTP_ENABLED: true
    volumes:
      - ./keycloak/conf:/opt/keycloak/conf/certs:ro
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - keycloak-net
    ports:
      - "8080:8080"
      - "8443:8443"

  nginx:
    image: nginx:latest
    container_name: nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./dist/angular/browser:/usr/share/nginx/html:ro
    depends_on:
      - keycloak
    networks:
      - keycloak-net

networks:
  keycloak-net:
    driver: bridge

volumes:
  postgres_data:
